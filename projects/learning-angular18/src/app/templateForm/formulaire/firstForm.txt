<div class="card">
    <div class="card-header text-white bg-success">
        Formulaire Template
    </div>
    <div class="card-body">
        
<!-- novalidate demande au formulaire de ne pas se valider avec la validation html mais avec angular -->
        <form (ngSubmit)="saveFromData(registerForm)" #registerForm="ngForm" appCustomPassValidator novalidate>

            <div class="row mb-3">
                <div class="col-md-6 mb-3">
                    <label>Nom :</label>
                    <input type="text" class="form-control" 
                    [(ngModel)]="user.nom" name="nom" 
                    required ngModel
                    minlength="4" maxlength="28"
                    pattern="[a-zA-Z ]+"
                    
                    #nomNgForm="ngModel"
                    [ngClass]="{'is-invalid': (nomNgForm.touched || nomNgForm.dirty) && nomNgForm.invalid  }"
                    >

                    <div class="invalid-feedback" *ngIf="nomNgForm.errors?.['required']">
                        <span>
                                Entrez votre Nom de Famille 
                        </span>
                    </div>
                    <div class="invalid-feedback" *ngIf="nomNgForm.errors?.['pattern']">
                        <span>
                               Seul les lettres de l'alphabet sont acceptées
                        </span>
                    </div>
                    <div class="invalid-feedback" *ngIf="(nomNgForm.errors?.['minlength']  || prenomNgForm.errors?.['maxlength'])">
                        <span>
                                Entre 4 et 28 caractères
                        </span>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <label>Prénom :</label>
                    <input type="text" class="form-control" 
                    [(ngModel)]="user.prenom" name="prenom" 
                    required ngModel
                    minlength="4" maxlength="21"
                    pattern="[a-zA-Z ]+"

                    #prenomNgForm="ngModel"
                    [ngClass]="{'is-invalid': (prenomNgForm.touched || prenomNgForm.dirty) && prenomNgForm.invalid }"
                    >

                    <div class="invalid-feedback" *ngIf="prenomNgForm.errors?.['required']">
                        <span>
                                Entrez votre Prénom
                        </span>
                    </div>
                    <div class="invalid-feedback" *ngIf="prenomNgForm.errors?.['pattern']">
                        <span>
                               Seul les lettres de l'alphabet sont acceptées
                        </span>
                    </div>
                    <div class="invalid-feedback" *ngIf="(prenomNgForm.errors?.['minlength'] || prenomNgForm.errors?.['maxlength'])">
                        <span>
                                Entre 4 et 21 caractères
                        </span>
                    </div>

                </div>
            </div>
            
                    <div class="col-md- mb-3">
                        <label>Email :</label>
                        <input type="email" class="form-control" 
                        [(ngModel)]="user.email" name="email" 
                        required ngModel
                        ngModel email="true"
                        pattern="^[^\W][a-zA-Z0-9\-\._]+[^\W]@[^\W][a-zA-Z0-9\-\._]+[^\W]\.[a-zA-Z]{2,6}$"
                        
                        #emailNgForm="ngModel"
                        [ngClass]="{'is-invalid': (emailNgForm.touched || emailNgForm.dirty) && emailNgForm.invalid }"
                        >

                            <div class="invalid-feedback" *ngIf="emailNgForm.errors?.['required']">
                                <span>
                                        L'adresse mail est Obligatoire
                                </span>
                            </div>
                            <div class="invalid-feedback" *ngIf="(emailNgForm.errors?.['email'] || nomNgForm.errors?.['pattern'])">
                                <span>
                                        L'adresse mail n'est pas valide
                                </span>
                            </div>
                       
                        
                    </div>
            <div class="row mb-3">
                <div class="col-md-6 mb-3">
                    <label>Mot de passe :</label>
                    <input type="password" class="form-control"
                    [(ngModel)]="user.password" name="password" 
                    required ngModel
                    pattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\S+$).{12,}$"

                    #passwordNgForm="ngModel"
                    [ngClass]="{ 'is-invalid': (passwordNgForm.touched || passwordNgForm.dirty) && passwordNgForm.invalid }"
                    >

                            <div class="invalid-feedback" *ngIf="passwordNgForm.errors?.['required']" class="error">
                                <span>
                                        Un mot de passe est Obligatoire
                                </span>
                            </div>
                            <div class="invalid-feedback" *ngIf=" passwordNgForm.errors?.['pattern'] ">
                                <span>
                                        <h2>12 Caractères Minimum : </h2>
                                        <p style="color:black">Celui-ci doit être complexe : 1 chiffre, 1 minuscule, 1 majuscule</p>
                                        <p style="color:black">et 1 caractère spécial : &#64; # $ % ^ & + = </p>
                                </span>
                            </div>
                           
                </div>

                    <div class="col-md-6 mb-3">
                        <label>Confirmation :</label>
                        <input type="password" class="form-control"
                        [(ngModel)]="user.confirmPass" name="confirmPass"
                        required ngModel
                        #confirmPassNgForm="ngModel"
                        appCustomPassValidator="password"
                        [ngClass]="{'is-invalid':  (confirmPassNgForm.touched || confirmPassNgForm.dirty) && (confirmPassNgForm.value !== passwordNgForm.value) }"
                        
                        >
                            <!-- Le message d'erreur apparait bien des que les deux mots de passe sont différents :-->
                             <div class="invalid-feedback"  *ngIf=" confirmPassNgForm.value !== passwordNgForm.value "> 
                                <!-- Not Working : -->
                                <!-- <div class="invalid-feedback"  *ngIf=" passwordNgForm.errors?.['appCustomPassValidator']"> -->
                                
                                <span>
                                    Les mots de passe ne sont pas identique !
                            </span>
                            </div>
                            <!-- Required is good! -->
                            <div class="invalid-feedback"  *ngIf="confirmPassNgForm.errors?.['required']">
                                <span>
                                    Vous devez Confirmer votre mot de passe
                                </span>
                            </div>
                            
                            <div class="invalid-feedback" *ngIf=" nomNgForm.invalid || prenomNgForm.invalid || emailNgForm.invalid || passwordNgForm.invalid || confirmPassNgForm.invalid ; then thenTemplate; else elseTemplate">
                            </div>
                            <ng-template #thenTemplate>
                                <br>
                                <!-- Si pas valide : -->
                                <div class="d-flex justify-content-end">
                                    <button type="submit" [disabled]=" !registerForm.valid"  class="btn btn-outline-success ml-auto">Sauvegarder</button>
                                </div>
                            </ng-template>
                            <ng-template #elseTemplate>
                                <br>
                                <!-- Si valide : -->
                                <div class="d-flex justify-content-end">
                                    <button type="submit" class="btn btn-outline-success ml-auto">Sauvegarder</button>
                                </div>
                            </ng-template>
                        <!-- GROS PROBLEME : Le bouton apparait quand les deux input sont évaluer comme identique , puis , si changement dans la confirmation , le bouton ne disparait pas !!! -->
                        <!-- SOLUTION pour les template, CREER une DIRECTIVE (fonction de Validation) -->
                        <div class="invalid-feedback" >
                            
                        </div>
                       
                            
                    </div>
                
            </div>